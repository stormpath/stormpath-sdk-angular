language: node_js
node_js:
- '6'
script:
- npm test
- npm start &
- npm run e2e
- npm run typedoc
cache:
  directories:
  - node_modules
before_install:
- test -z "$BUILD_DOCS" || openssl aes-256-cbc -K $encrypted_d98a3227cf72_key -iv
  $encrypted_d98a3227cf72_iv -in keypair.enc -out ~/.ssh/id_rsa -d
- test -z "$BUILD_DOCS" || chmod 600 ~/.ssh/id_rsa
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
after_success:
- test -z "$BUILD_DOCS" || CURRENT_HASH=`git rev-parse HEAD`
- test -z "$BUILD_DOCS" || RELEASE_VERSION=`git tag | xargs -I@ git log --format=format:"%ai
  @%n" -1 @ | sort | awk '{print $4}' | tail -n 1`
- test -z "$BUILD_DOCS" || RELEASE_HASH=`git rev-list $RELEASE_VERSION -n 1`
- test -z "$BUILD_DOCS" || if [ "$CURRENT_HASH" = "$RELEASE_HASH" ]; then DEPLOY_DOCS=true;
  fi
- test -z "$DEPLOY_DOCS" || git config --global user.email "evangelists@stormpath.com"
- test -z "$DEPLOY_DOCS" || git config --global user.name "stormpath-sdk-angular Auto
  Doc Build"
- test -z "$DEPLOY_DOCS" || git clone git@github.com:stormpath/stormpath.github.io.git
- test -z "$DEPLOY_DOCS" || cd stormpath.github.io
- test -z "$DEPLOY_DOCS" || git fetch origin source:source
- test -z "$DEPLOY_DOCS" || git checkout source
- test -z "$DEPLOY_DOCS" || mkdir -p source/angular
- test -z "$DEPLOY_DOCS" || rm -rf source/angular/api
- test -z "$DEPLOY_DOCS" || cp -r ../docs source/angular/api
- test -z "$DEPLOY_DOCS" || git add --all
- test -z "$DEPLOY_DOCS" || git commit -m "stormpath-sdk-angular release $RELEASE_VERSION"
- test -z "$DEPLOY_DOCS" || git push origin source
matrix:
  include:
  - env: BUILD_DOCS=true
    node_js: node
notifications:
  webhooks:
    on_success: change
    on_failure: always
    on_start: false
env:
  matrix:
  - secure: C61+TgQLZfpgsL9sifWn2wLwlHuCL72MrxxQJ/Tg26LsRGsA7QALN9cInURP1iKaGeJFz4BO5jM33yNrBxrplklr+6T2SDxuhd0CELJL4A+f7OFU6qLmFg71r+xvx7816Erz0w4k2LTcl6WT3xHb5rXUlreoyOtruNlnE0U/zDHOAp6Q0vlof0TQdJdQGt7pb5hzak2yQ48KO5w8rROKm/uBR95a+1KVdY/JPlTDlaHy+sGMsomCNz7dOeMe/2yubR8bbjd2sFq1p59kCLDzBrfnwph6wGVNrmWCVr5aaG9tt2tL8GBPfybiXIvA8m5ZL4G5ikTr+ObLx/0tyx2BS9byq6CegeYKU3pONhCGJsFHDJVCrkdgPQDYD2y6ehB5Uuy4JQDHboM1oAbB7ywBumfYC0hlK6kdx1RhK3VkRJIv0wljZUQMJ+NIftXdarDr7S5lXDieFcNGCaUVLDXAt1H7dlqowEyb3uPGIf/RH7tI0/RBObVC6KVsv0zHBOauw9hX2AWaXFpM6CNJ6BQEhn0KLhlvLVC8he+xBGvA7Q/3NHfyiDp8qawN56bJW0seTuUuACX0e79MvDeaUmp819hYlDroKBFDpzEDVt9niL3HcwPoNGX9gF0NCxaxys8/45BSjvb2L8RqVR/io5RIDau0DuKlNFm1EMrhO0JY268=
  - secure: frVUM5V3qdudvP9GkUXoS1Go8X1WjHLh5vXd4O7o6ppatMJwv3xKL5wTj5iankqoianuBdxZQhh9s3cCj+GE4Mwt1g43cEEiBUUqD3qNHLuWmBvo1aaPmHXEgD/x7FWeizd4fnqgTrwfkd5c+rj94T4PfgzYwL11McR7dYBt1owxh3GbRxqGIkWHegym+IQLDaPfH8CCMG7tLLi49WGpKKt3n2jvl0tRHCFN9X7Xo3EydbTXzRAbYAjOxTZvXeMuMtMn+WkqLrqYoqX+Yj7C7Ns6683bjMULwHiv0DvN1oMoLUU4PgSWRAm83EgE6CjEdJkgheVSe5if2YSXzZdQTDmIR0I64x5AAZWRcxHCYMV3LodZA7HkD72xWw6mft1MwawCHpe/cVekfFnhzGtwbrh7Z91dCRp3H/MizzVCr3Bt7wyAHUbuSzNZ6ozfUb09IcukUIHC5WEuUjBP8plzWrytQJ/fD6vGlIKrREqjmydvyBqId1Q2Onm0hjU6PXdQkIf4rczp1ZwSqLDMJRSA/MQG+NX7D740GBEGSmTgY9u/faG+AsC7MqC0FUXTU0TLJGos1b+IK1etKLcZFzeper1MEWrGJhLizmfy/aPuvpm1ZdjgkC/DsQ4kH7Z6qKcnZk4+ZIWuIAFWDAw3jxznMKZTx1TacOG7CN7gMErcQik=
